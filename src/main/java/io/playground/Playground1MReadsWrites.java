/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.playground;

import org.rocksdb.Options;
import org.rocksdb.RocksDB;
import org.rocksdb.RocksDBException;

public class Playground1MReadsWrites {

    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        System.out.println(new Playground1MReadsWrites().getGreeting());

        RocksDB.loadLibrary();

        try (final Options options = new Options().setCreateIfMissing(true)) {
            try (final RocksDB db = RocksDB.open(options, "/tmp/rocksdb")) {

                System.out.println("start writing... ");

                long startWriteNs = System.nanoTime();
                for (int i = 0; i < 1_000_000 ; i++) {
                    db.put((i+"").getBytes(), ("some-value-"+i).getBytes());
                }
                long endWriteNs = System.nanoTime();

                System.out.println("done writing... ");
                System.out.println("start reading... ");

                long startReadNs = System.nanoTime();
                for (int i = 0; i < 1_000_000 ; i++) {
                    db.get((i+"").getBytes());
                }
                long endReadNs = System.nanoTime();

                System.out.println("done reading... ");

                System.out.println(String.format("Time (nanos) total=%d write=%d read=%d",
                        endReadNs - startWriteNs,
                        endWriteNs - startWriteNs,
                        endReadNs - startReadNs));
            }

        } catch (RocksDBException e) {
            e.printStackTrace();
        }
    }
}
